// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id            String  @id @default(cuid())
  pointsToWin   Int     @default(100)
  maxRounds     Int     @default(3)
  maxPlayers    Int     @default(4)
  playersInRoom Int     @default(1)
  isPublic      Boolean @default(true)
  code          String  @unique
  hostUsername  String
  hostUserID    String
}

model Stats {
  id                    String @id @default(cuid())
  squeaks               Int    @default(0)
  averageFinishingPlace Float  @default(0)
  averageLeftInSqueak   Float  @default(0)
  lowestScore           Int    @default(0)
  highestScore          Int    @default(0)
  totalGamesPlayed      Int    @default(0)
  user                  User   @relation(fields: [userID], references: [id], onDelete: Cascade)
  userID                String @unique
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                   String    @id @default(cuid())
  name                 String?
  email                String?   @unique
  emailVerified        DateTime?
  image                String?
  username             String    @default("")
  avatarPath           String    @default("/avatars/rabbit.svg")
  color                String    @default("rgb(220, 55, 76)")
  deckHueRotation      Int       @default(0)
  squeakPileOnLeft     Boolean   @default(true)
  desktopNotifications Boolean   @default(false)
  stats                Stats?
  accounts             Account[]
  sessions             Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
